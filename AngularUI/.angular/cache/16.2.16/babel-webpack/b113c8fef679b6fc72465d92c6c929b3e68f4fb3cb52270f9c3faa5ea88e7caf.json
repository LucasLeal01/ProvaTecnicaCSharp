{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass FuncionarioService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api';\n  }\n  // Funcionários\n  getFuncionarios() {\n    return this.http.get(`${this.apiUrl}/funcionarios`);\n  }\n  getFuncionario(id) {\n    return this.http.get(`${this.apiUrl}/funcionarios/${id}`);\n  }\n  createFuncionario(funcionario) {\n    return this.http.post(`${this.apiUrl}/funcionarios`, funcionario);\n  }\n  updateFuncionario(id, funcionario) {\n    return this.http.put(`${this.apiUrl}/funcionarios/${id}`, funcionario);\n  }\n  deleteFuncionario(id) {\n    return this.http.delete(`${this.apiUrl}/funcionarios/${id}`);\n  }\n  getSalarioMedio() {\n    return this.http.get(`${this.apiUrl}/funcionarios/salario-medio`);\n  }\n  // Férias\n  getFerias() {\n    return this.http.get(`${this.apiUrl}/ferias`);\n  }\n  getFeriasByFuncionario(funcionarioId) {\n    return this.http.get(`${this.apiUrl}/ferias/funcionario/${funcionarioId}`);\n  }\n  createFerias(ferias) {\n    return this.http.post(`${this.apiUrl}/ferias`, ferias);\n  }\n  deleteFerias(id) {\n    return this.http.delete(`${this.apiUrl}/ferias/${id}`);\n  }\n  // Relatório PDF\n  getRelatorioPdf() {\n    return this.http.get(`${this.apiUrl}/funcionarios/relatorio/pdf`, {\n      responseType: 'blob'\n    });\n  }\n  static {\n    this.ɵfac = function FuncionarioService_Factory(t) {\n      return new (t || FuncionarioService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FuncionarioService,\n      factory: FuncionarioService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { FuncionarioService };","map":{"version":3,"names":["FuncionarioService","constructor","http","apiUrl","getFuncionarios","get","getFuncionario","id","createFuncionario","funcionario","post","updateFuncionario","put","deleteFuncionario","delete","getSalarioMedio","getFerias","getFeriasByFuncionario","funcionarioId","createFerias","ferias","deleteFerias","getRelatorioPdf","responseType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lucas\\Desktop\\ProvaTecnicaCSharp\\ProvaTecnicaCSharp\\AngularUI\\src\\app\\services\\funcionario.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Funcionario, Ferias } from '../models/funcionario.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FuncionarioService {\n  private apiUrl = 'http://localhost:5000/api';\n\n  constructor(private http: HttpClient) { }\n\n  // Funcionários\n  getFuncionarios(): Observable<Funcionario[]> {\n    return this.http.get<Funcionario[]>(`${this.apiUrl}/funcionarios`);\n  }\n\n  getFuncionario(id: number): Observable<Funcionario> {\n    return this.http.get<Funcionario>(`${this.apiUrl}/funcionarios/${id}`);\n  }\n\n  createFuncionario(funcionario: Funcionario): Observable<Funcionario> {\n    return this.http.post<Funcionario>(`${this.apiUrl}/funcionarios`, funcionario);\n  }\n\n  updateFuncionario(id: number, funcionario: Funcionario): Observable<any> {\n    return this.http.put(`${this.apiUrl}/funcionarios/${id}`, funcionario);\n  }\n\n  deleteFuncionario(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/funcionarios/${id}`);\n  }\n\n  getSalarioMedio(): Observable<number> {\n    return this.http.get<number>(`${this.apiUrl}/funcionarios/salario-medio`);\n  }\n\n  // Férias\n  getFerias(): Observable<Ferias[]> {\n    return this.http.get<Ferias[]>(`${this.apiUrl}/ferias`);\n  }\n\n  getFeriasByFuncionario(funcionarioId: number): Observable<Ferias[]> {\n    return this.http.get<Ferias[]>(`${this.apiUrl}/ferias/funcionario/${funcionarioId}`);\n  }\n\n  createFerias(ferias: Ferias): Observable<Ferias> {\n    return this.http.post<Ferias>(`${this.apiUrl}/ferias`, ferias);\n  }\n\n  deleteFerias(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/ferias/${id}`);\n  }\n\n  // Relatório PDF\n  getRelatorioPdf(): Observable<Blob> {\n    return this.http.get(`${this.apiUrl}/funcionarios/relatorio/pdf`, { \n      responseType: 'blob' \n    });\n  }\n}\n\n"],"mappings":";;AAKA,MAGaA,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2BAA2B;EAEJ;EAExC;EACAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,eAAe,CAAC;EACpE;EAEAG,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAc,GAAG,IAAI,CAACF,MAAM,iBAAiBI,EAAE,EAAE,CAAC;EACxE;EAEAC,iBAAiBA,CAACC,WAAwB;IACxC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAc,GAAG,IAAI,CAACP,MAAM,eAAe,EAAEM,WAAW,CAAC;EAChF;EAEAE,iBAAiBA,CAACJ,EAAU,EAAEE,WAAwB;IACpD,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,MAAM,iBAAiBI,EAAE,EAAE,EAAEE,WAAW,CAAC;EACxE;EAEAI,iBAAiBA,CAACN,EAAU;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,iBAAiBI,EAAE,EAAE,CAAC;EAC9D;EAEAQ,eAAeA,CAAA;IACb,OAAO,IAAI,CAACb,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,6BAA6B,CAAC;EAC3E;EAEA;EACAa,SAASA,CAAA;IACP,OAAO,IAAI,CAACd,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,MAAM,SAAS,CAAC;EACzD;EAEAc,sBAAsBA,CAACC,aAAqB;IAC1C,OAAO,IAAI,CAAChB,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,MAAM,uBAAuBe,aAAa,EAAE,CAAC;EACtF;EAEAC,YAAYA,CAACC,MAAc;IACzB,OAAO,IAAI,CAAClB,IAAI,CAACQ,IAAI,CAAS,GAAG,IAAI,CAACP,MAAM,SAAS,EAAEiB,MAAM,CAAC;EAChE;EAEAC,YAAYA,CAACd,EAAU;IACrB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,WAAWI,EAAE,EAAE,CAAC;EACxD;EAEA;EACAe,eAAeA,CAAA;IACb,OAAO,IAAI,CAACpB,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,6BAA6B,EAAE;MAChEoB,YAAY,EAAE;KACf,CAAC;EACJ;;;uBApDWvB,kBAAkB,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAlB3B,kBAAkB;MAAA4B,OAAA,EAAlB5B,kBAAkB,CAAA6B,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA;;SAEP9B,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}